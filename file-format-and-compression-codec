Sqoot
===============
--as-textfile
--as-vrodatafile
--as-parquetfile
--as-sequencefile

--compress
--compression-codec Snappy
--compression-codec GZip

--compression-codec org.apache.hadoop.io.compress.SnappyCodec
It is a good idea to use the --as-sequencefile option with this compression option.

Spark
===============
DF.write.mode(org.apache.spark.sql.SaveMode.Overwrite)
.option("compression", "snappy")
.parquet("/processed/product/20180215/04-37/read_repartition_write/general")

DF.write.mode(org.apache.spark.sql.SaveMode.Overwrite)
.option("compression", "none")
.parquet("/processed/product/20180215/04-37/read_repartition_write/nonewithshuffle")

conf = SparkConf()
conf.set("spark.hadoop.mapred.output.compress", "true")
conf.set("spark.hadoop.mapred.output.compression.codec", "org.apache.hadoop.io.compress.GzipCodec")
conf.set("spark.hadoop.mapred.output.compression.type", "BLOCK")

df_rdd = self.df.toJSON() 
df_rdd.saveAsTextFile(filename,compressionCodecClass="org.apache.hadoop.io.compress.GzipCodec")

df.write.option("compression","snappy").parquet(filename)
df.sqlContext().setConf("spark.sql.parquet.compression.codec", "snappy")

sqlContext.sql("SET parquet.compression=SNAPPY")

val df = sqlContext.read.format("csv")
            .option("header", "true")
            .option("delimiter", "|")
            .option("inferSchema",true")
            .load("/home/robin/Bureau/Spark/csv_strange_delimiter.csv")
            
Hive
===============
SET hive.exec.compress.output=true;
SET mapred.output.compression.codec=org.apache.hadoop.io.compress.SnappyCodec;
SET mapred.output.compression.type=BLOCK;

set parquet.compression=snappy

MapReduce (YARN)
==============
mapred-site.xml

For MRv1:
<property>
  <name>mapred.compress.map.output</name>
  <value>true</value>
</property>
<property>
  <name>mapred.map.output.compression.codec</name>
  <value>org.apache.hadoop.io.compress.SnappyCodec</value>
</property>

For YARN
<property>
  <name>mapreduce.map.output.compress</name>
  <value>true</value>
</property>
<property>
  <name>mapred.map.output.compress.codec</name>
  <value>org.apache.hadoop.io.compress.SnappyCodec</value>
</property>
